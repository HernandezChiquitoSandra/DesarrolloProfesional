@page "/generos"
@using AppBlazor.Client.Repositorios;
@using Microsoft.AspNetCore.Authorization;
@inject IRepositorio repositorio
@inject NavigationManager navigationManager
<!--protege el componente y la ruta, solo para componentes ruteables-->
@attribute [Authorize(Roles = "admin")]

<h3>IndiceGenero</h3>

<div class="mb-3">
    <a class="btn btn-info" href="generos/crear">Agregar Genero</a>
</div>


<ListadoGenerico Listado="Generos">
    <HayRegistrosCompleto>
        <table class="table table-striped">
            <thead>
                <tr>
                    <th></th>
                    <th>Nombre</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Generos!)
                {
                    <tr>
                        <td>
                            <a href="/generos/editar/@item.Id" class="btn btn-success">Editar</a>
                            <button class="btn btn-danger" 
                                @onclick=@(() => Borrar(item))>Borrar</button>
                        </td>
                        <td>
                            @item.Nombre
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </HayRegistrosCompleto>
</ListadoGenerico>

@code {
    public List<Genero>? Generos { get; set; }

    protected async override Task OnInitializedAsync()
    {
        await Cargar();
    }

    private async Task Cargar()
    {
        var respuestaHTTP = await repositorio.Get<List<Genero>>("api/generos");
        Generos = respuestaHTTP.Response!;
    }

    private async Task Borrar(Genero genero)
    {
        var responseHTTP = await repositorio.Delete($"api/generos/{genero.Id}");//en el servicio se le dice que la url es el id del genero que se quiere borrar

        if (responseHTTP.Error)
        {
            if (responseHTTP.HttpResponseMessage.StatusCode == System.Net.HttpStatusCode.NotFound)
            {
                navigationManager.NavigateTo("/");
            }
            else
            {
                var mensajeError = await responseHTTP.ObtenerMensajeError();
                Console.WriteLine("Error al borrar :0");
            }
        }
        else
        {
            await Cargar();
        }
    }
}